[{"C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\components\\AnimeList.js":"1","C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\components\\SeasonalAnime.js":"2","C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\index.js":"3","C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\components\\AnimeCard.js":"4","C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\firebase.js":"5","C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\pages\\SingleView.js":"6","C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\pages\\Home.js":"7","C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\context\\search.js":"8","C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\pages\\Results.js":"9","C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\pages\\Ratings.js":"10","C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\components\\MainGraph.js":"11","C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\components\\MainNavigation.js":"12","C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\App.js":"13"},{"size":326,"mtime":1610575732126,"results":"14","hashOfConfig":"15"},{"size":3202,"mtime":1610575765261,"results":"16","hashOfConfig":"15"},{"size":197,"mtime":1610582932654,"results":"17","hashOfConfig":"15"},{"size":1393,"mtime":1610435718177,"results":"18","hashOfConfig":"15"},{"size":565,"mtime":1610502678668,"results":"19","hashOfConfig":"15"},{"size":176,"mtime":1610406280534,"results":"20","hashOfConfig":"15"},{"size":2938,"mtime":1610578570909,"results":"21","hashOfConfig":"15"},{"size":254,"mtime":1610588548196,"results":"22","hashOfConfig":"15"},{"size":931,"mtime":1610575657177,"results":"23","hashOfConfig":"15"},{"size":628,"mtime":1610429080425,"results":"24","hashOfConfig":"15"},{"size":2313,"mtime":1610574092169,"results":"25","hashOfConfig":"15"},{"size":6998,"mtime":1610406418360,"results":"26","hashOfConfig":"15"},{"size":1895,"mtime":1610591308170,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q9ftkp",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\components\\AnimeList.js",[],"C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\components\\SeasonalAnime.js",["60"],"import React from 'react';\r\nimport AnimeList from './AnimeList';\r\nimport {firestore} from '../firebase';\r\n\r\nexport default class SeasonalAnime extends React.Component {\r\n    state = {\r\n        loading: true,\r\n        data: []\r\n    };\r\n\r\n    async updateAnime() {\r\n        //console.log(\"updating anime!\");\r\n        var i = 0;\r\n        for (var i = 0; i < this.state.data.length; i++) {\r\n            var scoreArray = [];\r\n            var dateArray = [];\r\n            const aniRef = firestore.collection('anime').doc(String(this.state.data[i].mal_id));\r\n            const doc = await aniRef.get();\r\n            \r\n            if(!doc.data()){\r\n                scoreArray.push(this.state.data[i].score);\r\n                dateArray.push(new Date());\r\n                firestore.collection(\"anime\").doc(String(this.state.data[i].mal_id)).set({\r\n                    mal_id: this.state.data[i].mal_id,\r\n                    title: this.state.data[i].title,\r\n                    date: dateArray,\r\n                    score: scoreArray\r\n                }).then(function() {\r\n                    //console.log(\"First Stage written!\");\r\n                })\r\n                .catch(function(error) {\r\n                    //console.error(\"Error writing document: \", error);\r\n                });\r\n            } else {\r\n                scoreArray.push(this.state.data[i].score);\r\n                dateArray.push(new Date());\r\n                scoreArray = scoreArray.concat(doc.data().score);\r\n                dateArray = dateArray.concat(doc.data().date);\r\n                firestore.collection(\"anime\").doc(String(this.state.data[i].mal_id)).set({\r\n                    mal_id: this.state.data[i].mal_id,\r\n                    title: this.state.data[i].title,\r\n                    date: dateArray,\r\n                    score: scoreArray\r\n                }).then(function() {\r\n                    //console.log(\"Scores updated!\");\r\n                })\r\n                .catch(function(error) {\r\n                    //console.error(\"Error writing document: \", error);\r\n                });\r\n            }\r\n        }\r\n    }            \r\n    \r\n    async componentDidMount() {\r\n        const url = \"https://api.jikan.moe/v3/season\"\r\n        const response = await fetch(url);\r\n        const anime = await response.json();\r\n        this.setState({data: anime.anime});\r\n\r\n        // check for time\r\n        var currentTime = new Date();\r\n        var prevTime = await firestore.collection(\"time\").doc('lastUpdate').get()\r\n        if(prevTime.exists){\r\n            if((currentTime.getTime() - prevTime.data().time.toMillis())/60000 > 59){\r\n                this.updateAnime();\r\n                firestore.collection(\"time\").doc('lastUpdate').set({\r\n                    time: currentTime\r\n                });\r\n            } else {\r\n                //console.log(\"it's not time\");\r\n            }\r\n        } else {\r\n            this.updateAnime();\r\n            firestore.collection(\"time\").doc('lastUpdate').set({\r\n                time: currentTime\r\n            });\r\n        }      \r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <AnimeList data={this.state.data}/>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\index.js",[],["61","62"],"C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\components\\AnimeCard.js",["63"],"import React from 'react';\r\nimport {SearchContext} from '../context/search';\r\nimport {Typography, Link, Paper, GridListTile, Grid} from '@material-ui/core';\r\nimport './AnimeCard.scss';\r\n\r\nconst AnimeCard = (props) => {\r\n    const onClickHandler = () => {\r\n        \r\n    }\r\n\r\n    const title = props.anime.title.length > 15 ? `${props.anime.title.substring(0,15)}...`: props.anime.title;\r\n    const imgUrl = props.anime.image_url;\r\n    const rating = props.anime.score;\r\n    const synopsis = props.anime.synopsis.length > 30 ? `${props.anime.title.substring(0,30)}...`: props.anime.synposis;\r\n\r\n    return (\r\n        <GridListTile className=\"animeCard__container\">\r\n            <Grid container item xs={12}>\r\n                <Paper className=\"animeCard__paper\">\r\n                    <Typography variant=\"h5\" component=\"h2\">{title}</Typography>\r\n                    <img src={imgUrl} alt={title} style={{maxHeight: 300}}/>\r\n                    <Typography variant=\"h5\" component=\"h2\">{rating}</Typography>\r\n                    <Typography variant=\"body2\" component=\"h2\" paragraph={true}>\r\n                        {synopsis}\r\n                    </Typography>\r\n                    <Link component=\"button\" variant=\"body1\" style={{marginBottom: 0}} onClick={onClickHandler}>More</Link>\r\n                </Paper>\r\n            </Grid>\r\n        </GridListTile>\r\n    )\r\n};\r\n\r\nexport default AnimeCard;","C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\firebase.js",[],["64","65"],"C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\pages\\SingleView.js",[],"C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\pages\\Home.js",["66"],"import React, {useContext, useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { SearchContext } from '../context/search';\r\nimport {FormControl, Input, IconButton, Grid} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport './Home.scss';\r\nimport AnimeList from '../components/AnimeList';\r\nimport SeasonalAnime from '../components/SeasonalAnime';\r\nimport MainGraph from '../components/MainGraph'\r\n\r\nconst Home = () => {\r\n    const history = useHistory();\r\n    const search = useContext(SearchContext);\r\n    const [input, setInput] = useState('');\r\n    // useEffect(() => {\r\n    //     search.search('naruto').then((data) => {\r\n    //         console.log(data)\r\n    //     });\r\n    // }, [search]);\r\n    const handleSearch = (event) => {\r\n        console.log(search);\r\n        event.preventDefault();\r\n            search.search(input).then((data) => {\r\n            search.setData(data.results);\r\n            localStorage.setItem('resData', JSON.stringify(data.results))\r\n            history.push('/results');\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Grid container direction=\"column\" justify=\"center\" alignContent=\"center\" alignItems=\"center\">\r\n            <Grid item>\r\n                <Grid item>\r\n                <img\r\n                        className=\"kazumaImg\"\r\n                        alt=\"kazuma\"\r\n                        src={`${process.env.PUBLIC_URL}/kazuma.png`}\r\n                        height={420}\r\n                        width={405}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <form className=\"home__form\">\r\n                        <FormControl className=\"home__formControl\" type=\"submit\">\r\n                            <Input className=\"home__input\" placeholder=\"Search for stonks on any anime\" value={input} onChange={(event) => setInput(event.target.value)} />\r\n                            <IconButton className=\"home__iconButton\" variant=\"contained\" color=\"primary\" type=\"submit\" disabled={!input} onClick={handleSearch}>\r\n                                <SearchIcon/>\r\n                            </IconButton>\r\n                        </FormControl>\r\n                    </form>\r\n                </Grid>\r\n                <div className=\"graphs\">\r\n                    <Grid className=\"leftGraph\" item justify=\"left\">\r\n                        <MainGraph mal_id='40028'/>\r\n                    </Grid>\r\n                    <Grid className=\"centerGraph\" item justify=\"center\">\r\n                        <MainGraph mal_id='36458'/>\r\n                    </Grid>\r\n                    <Grid className=\"rightGraph\" item justify=\"right\">\r\n                        <MainGraph mal_id='39551'/>\r\n                    </Grid>\r\n                </div>\r\n                <Grid item>\r\n                    <SeasonalAnime/>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Home;","C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\context\\search.js",[],"C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\pages\\Results.js",[],"C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\pages\\Ratings.js",[],"C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\components\\MainGraph.js",["67","68"],"import React from 'react'\r\nimport { Chart } from 'react-charts'\r\nimport {firestore} from '../firebase';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nexport default class MainGraph extends React.Component  {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      // Don't call this.setState() here!\r\n    }\r\n\r\n    state = {\r\n        labels: [],\r\n        datasets: [],\r\n        title: '',\r\n        min: 1000,\r\n        max: 0\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const aniRef = firestore.collection('anime').doc(this.props.mal_id);\r\n        const doc = await aniRef.get();\r\n        var scores = doc.data().score.reverse();\r\n        for(var j = 0; j < scores.length; j++){\r\n          scores[j] *= 100;\r\n          if(scores[j] > this.state.max){\r\n            this.setState({max: scores[j]})\r\n          }\r\n          if(scores[j] < this.state.min){\r\n            this.setState({min: scores[j]})\r\n          }\r\n        }\r\n        var color = '#1ce852';\r\n        if(scores[0] < scores[scores.length-1]){\r\n          color = '#1ce852';\r\n        } else {\r\n          color = '#b80d35';\r\n        }\r\n        \r\n        var animeLines = [{\r\n          label: doc.data().title + ' Rating',\r\n          fill: false,\r\n          lineTension: 0.5,\r\n          backgroundColor: color,\r\n          borderColor: color,\r\n          borderWidth: 2,\r\n          data: scores\r\n        }];\r\n        var dates = [];\r\n        for(var i = 0; i < doc.data().date.length; i++){\r\n          dates[i] = (doc.data().date[doc.data().date.length-i-1]).toDate().toDateString();\r\n        }\r\n        this.setState({labels: dates});\r\n        this.setState({datasets: animeLines});\r\n        this.setState({title: doc.data().title});\r\n    }    \r\n\r\n    render() {\r\n        return (\r\n            <Line\r\n              data={this.state}\r\n              options={{\r\n                title:{\r\n                  display:true,\r\n                  text: this.state.title +' Stock',\r\n                  fontSize:20\r\n                },\r\n                scales: {\r\n                  yAxes: [{\r\n                      ticks: {\r\n                          suggestedMin: this.state.min-25,\r\n                          suggestedMax: this.state.max+25\r\n                      }\r\n                  }]\r\n                }\r\n              }}\r\n            />\r\n        );\r\n    }\r\n    \r\n};","C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\components\\MainNavigation.js",[],"C:\\Users\\aryas\\Documents\\GitHub\\AniStocks2\\anistocks2\\src\\App.js",["69","70"],{"ruleId":"71","severity":1,"message":"72","line":14,"column":18,"nodeType":"73","messageId":"74","endLine":14,"endColumn":19},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":2,"column":9,"nodeType":"73","messageId":"81","endLine":2,"endColumn":22},{"ruleId":"75","replacedBy":"82"},{"ruleId":"77","replacedBy":"83"},{"ruleId":"79","severity":1,"message":"84","line":7,"column":8,"nodeType":"73","messageId":"81","endLine":7,"endColumn":17},{"ruleId":"79","severity":1,"message":"85","line":2,"column":10,"nodeType":"73","messageId":"81","endLine":2,"endColumn":15},{"ruleId":"86","severity":1,"message":"87","line":8,"column":5,"nodeType":"88","messageId":"89","endLine":11,"endColumn":6},{"ruleId":"79","severity":1,"message":"90","line":2,"column":8,"nodeType":"73","messageId":"81","endLine":2,"endColumn":16},{"ruleId":"91","severity":1,"message":"92","line":43,"column":61,"nodeType":"93","messageId":"94","endLine":43,"endColumn":62},"no-redeclare","'i' is already defined.","Identifier","redeclared","no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'SearchContext' is defined but never used.","unusedVar",["95"],["96"],"'AnimeList' is defined but never used.","'Chart' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'useState' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]